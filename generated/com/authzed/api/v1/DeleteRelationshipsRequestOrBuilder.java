// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/permission_service.proto

package com.authzed.api.v1;

public interface DeleteRelationshipsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.v1.DeleteRelationshipsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.authzed.api.v1.RelationshipFilter relationship_filter = 1 [json_name = "relationshipFilter", (.validate.rules) = { ... }</code>
   * @return Whether the relationshipFilter field is set.
   */
  boolean hasRelationshipFilter();
  /**
   * <code>.authzed.api.v1.RelationshipFilter relationship_filter = 1 [json_name = "relationshipFilter", (.validate.rules) = { ... }</code>
   * @return The relationshipFilter.
   */
  com.authzed.api.v1.RelationshipFilter getRelationshipFilter();
  /**
   * <code>.authzed.api.v1.RelationshipFilter relationship_filter = 1 [json_name = "relationshipFilter", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.RelationshipFilterOrBuilder getRelationshipFilterOrBuilder();

  /**
   * <pre>
   * To be bounded by configuration
   * </pre>
   *
   * <code>repeated .authzed.api.v1.Precondition optional_preconditions = 2 [json_name = "optionalPreconditions", (.validate.rules) = { ... }</code>
   */
  java.util.List<com.authzed.api.v1.Precondition> 
      getOptionalPreconditionsList();
  /**
   * <pre>
   * To be bounded by configuration
   * </pre>
   *
   * <code>repeated .authzed.api.v1.Precondition optional_preconditions = 2 [json_name = "optionalPreconditions", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.Precondition getOptionalPreconditions(int index);
  /**
   * <pre>
   * To be bounded by configuration
   * </pre>
   *
   * <code>repeated .authzed.api.v1.Precondition optional_preconditions = 2 [json_name = "optionalPreconditions", (.validate.rules) = { ... }</code>
   */
  int getOptionalPreconditionsCount();
  /**
   * <pre>
   * To be bounded by configuration
   * </pre>
   *
   * <code>repeated .authzed.api.v1.Precondition optional_preconditions = 2 [json_name = "optionalPreconditions", (.validate.rules) = { ... }</code>
   */
  java.util.List<? extends com.authzed.api.v1.PreconditionOrBuilder> 
      getOptionalPreconditionsOrBuilderList();
  /**
   * <pre>
   * To be bounded by configuration
   * </pre>
   *
   * <code>repeated .authzed.api.v1.Precondition optional_preconditions = 2 [json_name = "optionalPreconditions", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.PreconditionOrBuilder getOptionalPreconditionsOrBuilder(
      int index);

  /**
   * <pre>
   * optional_limit, if non-zero, specifies the limit on the number of relationships to be deleted.
   * If there are more matching relationships found to be deleted than the limit specified here,
   * the deletion call will fail with an error to prevent partial deletion. If partial deletion
   * is needed, specify below that partial deletion is allowed. Partial deletions can be used
   * in a loop to delete large amounts of relationships in a *non-transactional* manner.
   * </pre>
   *
   * <code>uint32 optional_limit = 3 [json_name = "optionalLimit", (.validate.rules) = { ... }</code>
   * @return The optionalLimit.
   */
  int getOptionalLimit();

  /**
   * <pre>
   * optional_allow_partial_deletions, if true and a limit is specified, will delete matching found
   * relationships up to the count specified in optional_limit, and no more.
   * </pre>
   *
   * <code>bool optional_allow_partial_deletions = 4 [json_name = "optionalAllowPartialDeletions"];</code>
   * @return The optionalAllowPartialDeletions.
   */
  boolean getOptionalAllowPartialDeletions();
}
