// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/debug.proto

package com.authzed.api.v1;

public interface CheckDebugTraceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.v1.CheckDebugTrace)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * resource holds the resource on which the Check was performed.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = { ... }</code>
   * @return Whether the resource field is set.
   */
  boolean hasResource();
  /**
   * <pre>
   * resource holds the resource on which the Check was performed.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = { ... }</code>
   * @return The resource.
   */
  com.authzed.api.v1.ObjectReference getResource();
  /**
   * <pre>
   * resource holds the resource on which the Check was performed.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 1 [json_name = "resource", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.ObjectReferenceOrBuilder getResourceOrBuilder();

  /**
   * <pre>
   * permission holds the name of the permission or relation on which the Check was performed.
   * </pre>
   *
   * <code>string permission = 2 [json_name = "permission"];</code>
   * @return The permission.
   */
  java.lang.String getPermission();
  /**
   * <pre>
   * permission holds the name of the permission or relation on which the Check was performed.
   * </pre>
   *
   * <code>string permission = 2 [json_name = "permission"];</code>
   * @return The bytes for permission.
   */
  com.google.protobuf.ByteString
      getPermissionBytes();

  /**
   * <pre>
   * permission_type holds information indicating whether it was a permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.PermissionType permission_type = 3 [json_name = "permissionType", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for permissionType.
   */
  int getPermissionTypeValue();
  /**
   * <pre>
   * permission_type holds information indicating whether it was a permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.PermissionType permission_type = 3 [json_name = "permissionType", (.validate.rules) = { ... }</code>
   * @return The permissionType.
   */
  com.authzed.api.v1.CheckDebugTrace.PermissionType getPermissionType();

  /**
   * <pre>
   * subject holds the subject on which the Check was performed. This will be static across all calls within
   * the same Check tree.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   * @return Whether the subject field is set.
   */
  boolean hasSubject();
  /**
   * <pre>
   * subject holds the subject on which the Check was performed. This will be static across all calls within
   * the same Check tree.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   * @return The subject.
   */
  com.authzed.api.v1.SubjectReference getSubject();
  /**
   * <pre>
   * subject holds the subject on which the Check was performed. This will be static across all calls within
   * the same Check tree.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.SubjectReferenceOrBuilder getSubjectOrBuilder();

  /**
   * <pre>
   * result holds the result of the Check call.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.Permissionship result = 5 [json_name = "result", (.validate.rules) = { ... }</code>
   * @return The enum numeric value on the wire for result.
   */
  int getResultValue();
  /**
   * <pre>
   * result holds the result of the Check call.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.Permissionship result = 5 [json_name = "result", (.validate.rules) = { ... }</code>
   * @return The result.
   */
  com.authzed.api.v1.CheckDebugTrace.Permissionship getResult();

  /**
   * <pre>
   * caveat_evaluation_info holds information about the caveat evaluated for this step of the trace.
   * </pre>
   *
   * <code>.authzed.api.v1.CaveatEvalInfo caveat_evaluation_info = 8 [json_name = "caveatEvaluationInfo"];</code>
   * @return Whether the caveatEvaluationInfo field is set.
   */
  boolean hasCaveatEvaluationInfo();
  /**
   * <pre>
   * caveat_evaluation_info holds information about the caveat evaluated for this step of the trace.
   * </pre>
   *
   * <code>.authzed.api.v1.CaveatEvalInfo caveat_evaluation_info = 8 [json_name = "caveatEvaluationInfo"];</code>
   * @return The caveatEvaluationInfo.
   */
  com.authzed.api.v1.CaveatEvalInfo getCaveatEvaluationInfo();
  /**
   * <pre>
   * caveat_evaluation_info holds information about the caveat evaluated for this step of the trace.
   * </pre>
   *
   * <code>.authzed.api.v1.CaveatEvalInfo caveat_evaluation_info = 8 [json_name = "caveatEvaluationInfo"];</code>
   */
  com.authzed.api.v1.CaveatEvalInfoOrBuilder getCaveatEvaluationInfoOrBuilder();

  /**
   * <pre>
   * duration holds the time spent executing this Check operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 9 [json_name = "duration"];</code>
   * @return Whether the duration field is set.
   */
  boolean hasDuration();
  /**
   * <pre>
   * duration holds the time spent executing this Check operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 9 [json_name = "duration"];</code>
   * @return The duration.
   */
  com.google.protobuf.Duration getDuration();
  /**
   * <pre>
   * duration holds the time spent executing this Check operation.
   * </pre>
   *
   * <code>.google.protobuf.Duration duration = 9 [json_name = "duration"];</code>
   */
  com.google.protobuf.DurationOrBuilder getDurationOrBuilder();

  /**
   * <pre>
   * was_cached_result, if true, indicates that the result was found in the cache and returned directly.
   * </pre>
   *
   * <code>bool was_cached_result = 6 [json_name = "wasCachedResult"];</code>
   * @return Whether the wasCachedResult field is set.
   */
  boolean hasWasCachedResult();
  /**
   * <pre>
   * was_cached_result, if true, indicates that the result was found in the cache and returned directly.
   * </pre>
   *
   * <code>bool was_cached_result = 6 [json_name = "wasCachedResult"];</code>
   * @return The wasCachedResult.
   */
  boolean getWasCachedResult();

  /**
   * <pre>
   * sub_problems holds the sub problems that were executed to resolve the answer to this Check. An empty list
   * and a permissionship of PERMISSIONSHIP_HAS_PERMISSION indicates the subject was found within this relation.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.SubProblems sub_problems = 7 [json_name = "subProblems"];</code>
   * @return Whether the subProblems field is set.
   */
  boolean hasSubProblems();
  /**
   * <pre>
   * sub_problems holds the sub problems that were executed to resolve the answer to this Check. An empty list
   * and a permissionship of PERMISSIONSHIP_HAS_PERMISSION indicates the subject was found within this relation.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.SubProblems sub_problems = 7 [json_name = "subProblems"];</code>
   * @return The subProblems.
   */
  com.authzed.api.v1.CheckDebugTrace.SubProblems getSubProblems();
  /**
   * <pre>
   * sub_problems holds the sub problems that were executed to resolve the answer to this Check. An empty list
   * and a permissionship of PERMISSIONSHIP_HAS_PERMISSION indicates the subject was found within this relation.
   * </pre>
   *
   * <code>.authzed.api.v1.CheckDebugTrace.SubProblems sub_problems = 7 [json_name = "subProblems"];</code>
   */
  com.authzed.api.v1.CheckDebugTrace.SubProblemsOrBuilder getSubProblemsOrBuilder();

  public com.authzed.api.v1.CheckDebugTrace.ResolutionCase getResolutionCase();
}
