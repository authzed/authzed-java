// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/watch_service.proto

package com.authzed.api.v1;

/**
 * <pre>
 * WatchRequest specifies the object definitions for which we want to start
 * watching mutations, and an optional start snapshot for when to start
 * watching.
 * </pre>
 *
 * Protobuf type {@code authzed.api.v1.WatchRequest}
 */
public final class WatchRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:authzed.api.v1.WatchRequest)
    WatchRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use WatchRequest.newBuilder() to construct.
  private WatchRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private WatchRequest() {
    optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    optionalRelationshipFilters_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new WatchRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.authzed.api.v1.WatchRequest.class, com.authzed.api.v1.WatchRequest.Builder.class);
  }

  public static final int OPTIONAL_OBJECT_TYPES_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private com.google.protobuf.LazyStringList optionalObjectTypes_;
  /**
   * <pre>
   * optional_object_types is a filter of resource object types to watch for changes.
   * If specified, only changes to the specified object types will be returned and
   * optional_relationship_filters cannot be used.
   * </pre>
   *
   * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
   * @return A list containing the optionalObjectTypes.
   */
  public com.google.protobuf.ProtocolStringList
      getOptionalObjectTypesList() {
    return optionalObjectTypes_;
  }
  /**
   * <pre>
   * optional_object_types is a filter of resource object types to watch for changes.
   * If specified, only changes to the specified object types will be returned and
   * optional_relationship_filters cannot be used.
   * </pre>
   *
   * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
   * @return The count of optionalObjectTypes.
   */
  public int getOptionalObjectTypesCount() {
    return optionalObjectTypes_.size();
  }
  /**
   * <pre>
   * optional_object_types is a filter of resource object types to watch for changes.
   * If specified, only changes to the specified object types will be returned and
   * optional_relationship_filters cannot be used.
   * </pre>
   *
   * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
   * @param index The index of the element to return.
   * @return The optionalObjectTypes at the given index.
   */
  public java.lang.String getOptionalObjectTypes(int index) {
    return optionalObjectTypes_.get(index);
  }
  /**
   * <pre>
   * optional_object_types is a filter of resource object types to watch for changes.
   * If specified, only changes to the specified object types will be returned and
   * optional_relationship_filters cannot be used.
   * </pre>
   *
   * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
   * @param index The index of the value to return.
   * @return The bytes of the optionalObjectTypes at the given index.
   */
  public com.google.protobuf.ByteString
      getOptionalObjectTypesBytes(int index) {
    return optionalObjectTypes_.getByteString(index);
  }

  public static final int OPTIONAL_START_CURSOR_FIELD_NUMBER = 2;
  private com.authzed.api.v1.ZedToken optionalStartCursor_;
  /**
   * <pre>
   * optional_start_cursor is the ZedToken holding the point-in-time at
   * which to start watching for changes.
   * If not specified, the watch will begin at the current head revision
   * of the datastore, returning any updates that occur after the caller
   * makes the request.
   * Note that if this cursor references a point-in-time containing data
   * that has been garbage collected, an error will be returned.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
   * @return Whether the optionalStartCursor field is set.
   */
  @java.lang.Override
  public boolean hasOptionalStartCursor() {
    return optionalStartCursor_ != null;
  }
  /**
   * <pre>
   * optional_start_cursor is the ZedToken holding the point-in-time at
   * which to start watching for changes.
   * If not specified, the watch will begin at the current head revision
   * of the datastore, returning any updates that occur after the caller
   * makes the request.
   * Note that if this cursor references a point-in-time containing data
   * that has been garbage collected, an error will be returned.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
   * @return The optionalStartCursor.
   */
  @java.lang.Override
  public com.authzed.api.v1.ZedToken getOptionalStartCursor() {
    return optionalStartCursor_ == null ? com.authzed.api.v1.ZedToken.getDefaultInstance() : optionalStartCursor_;
  }
  /**
   * <pre>
   * optional_start_cursor is the ZedToken holding the point-in-time at
   * which to start watching for changes.
   * If not specified, the watch will begin at the current head revision
   * of the datastore, returning any updates that occur after the caller
   * makes the request.
   * Note that if this cursor references a point-in-time containing data
   * that has been garbage collected, an error will be returned.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
   */
  @java.lang.Override
  public com.authzed.api.v1.ZedTokenOrBuilder getOptionalStartCursorOrBuilder() {
    return optionalStartCursor_ == null ? com.authzed.api.v1.ZedToken.getDefaultInstance() : optionalStartCursor_;
  }

  public static final int OPTIONAL_RELATIONSHIP_FILTERS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<com.authzed.api.v1.RelationshipFilter> optionalRelationshipFilters_;
  /**
   * <pre>
   * optional_relationship_filters, if specified, indicates the
   * filter(s) to apply to each relationship to be returned by watch.
   * The relationship will be returned as long as at least one filter matches,
   * this allows clients to match relationships on multiple filters on a single watch call.
   * If specified, optional_object_types cannot be used.
   * </pre>
   *
   * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<com.authzed.api.v1.RelationshipFilter> getOptionalRelationshipFiltersList() {
    return optionalRelationshipFilters_;
  }
  /**
   * <pre>
   * optional_relationship_filters, if specified, indicates the
   * filter(s) to apply to each relationship to be returned by watch.
   * The relationship will be returned as long as at least one filter matches,
   * this allows clients to match relationships on multiple filters on a single watch call.
   * If specified, optional_object_types cannot be used.
   * </pre>
   *
   * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
   */
  @java.lang.Override
  public java.util.List<? extends com.authzed.api.v1.RelationshipFilterOrBuilder> 
      getOptionalRelationshipFiltersOrBuilderList() {
    return optionalRelationshipFilters_;
  }
  /**
   * <pre>
   * optional_relationship_filters, if specified, indicates the
   * filter(s) to apply to each relationship to be returned by watch.
   * The relationship will be returned as long as at least one filter matches,
   * this allows clients to match relationships on multiple filters on a single watch call.
   * If specified, optional_object_types cannot be used.
   * </pre>
   *
   * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
   */
  @java.lang.Override
  public int getOptionalRelationshipFiltersCount() {
    return optionalRelationshipFilters_.size();
  }
  /**
   * <pre>
   * optional_relationship_filters, if specified, indicates the
   * filter(s) to apply to each relationship to be returned by watch.
   * The relationship will be returned as long as at least one filter matches,
   * this allows clients to match relationships on multiple filters on a single watch call.
   * If specified, optional_object_types cannot be used.
   * </pre>
   *
   * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
   */
  @java.lang.Override
  public com.authzed.api.v1.RelationshipFilter getOptionalRelationshipFilters(int index) {
    return optionalRelationshipFilters_.get(index);
  }
  /**
   * <pre>
   * optional_relationship_filters, if specified, indicates the
   * filter(s) to apply to each relationship to be returned by watch.
   * The relationship will be returned as long as at least one filter matches,
   * this allows clients to match relationships on multiple filters on a single watch call.
   * If specified, optional_object_types cannot be used.
   * </pre>
   *
   * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
   */
  @java.lang.Override
  public com.authzed.api.v1.RelationshipFilterOrBuilder getOptionalRelationshipFiltersOrBuilder(
      int index) {
    return optionalRelationshipFilters_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < optionalObjectTypes_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, optionalObjectTypes_.getRaw(i));
    }
    if (optionalStartCursor_ != null) {
      output.writeMessage(2, getOptionalStartCursor());
    }
    for (int i = 0; i < optionalRelationshipFilters_.size(); i++) {
      output.writeMessage(3, optionalRelationshipFilters_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < optionalObjectTypes_.size(); i++) {
        dataSize += computeStringSizeNoTag(optionalObjectTypes_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getOptionalObjectTypesList().size();
    }
    if (optionalStartCursor_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getOptionalStartCursor());
    }
    for (int i = 0; i < optionalRelationshipFilters_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, optionalRelationshipFilters_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.authzed.api.v1.WatchRequest)) {
      return super.equals(obj);
    }
    com.authzed.api.v1.WatchRequest other = (com.authzed.api.v1.WatchRequest) obj;

    if (!getOptionalObjectTypesList()
        .equals(other.getOptionalObjectTypesList())) return false;
    if (hasOptionalStartCursor() != other.hasOptionalStartCursor()) return false;
    if (hasOptionalStartCursor()) {
      if (!getOptionalStartCursor()
          .equals(other.getOptionalStartCursor())) return false;
    }
    if (!getOptionalRelationshipFiltersList()
        .equals(other.getOptionalRelationshipFiltersList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getOptionalObjectTypesCount() > 0) {
      hash = (37 * hash) + OPTIONAL_OBJECT_TYPES_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalObjectTypesList().hashCode();
    }
    if (hasOptionalStartCursor()) {
      hash = (37 * hash) + OPTIONAL_START_CURSOR_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalStartCursor().hashCode();
    }
    if (getOptionalRelationshipFiltersCount() > 0) {
      hash = (37 * hash) + OPTIONAL_RELATIONSHIP_FILTERS_FIELD_NUMBER;
      hash = (53 * hash) + getOptionalRelationshipFiltersList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.authzed.api.v1.WatchRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.authzed.api.v1.WatchRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.authzed.api.v1.WatchRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.authzed.api.v1.WatchRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.authzed.api.v1.WatchRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * WatchRequest specifies the object definitions for which we want to start
   * watching mutations, and an optional start snapshot for when to start
   * watching.
   * </pre>
   *
   * Protobuf type {@code authzed.api.v1.WatchRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:authzed.api.v1.WatchRequest)
      com.authzed.api.v1.WatchRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.authzed.api.v1.WatchRequest.class, com.authzed.api.v1.WatchRequest.Builder.class);
    }

    // Construct using com.authzed.api.v1.WatchRequest.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      optionalStartCursor_ = null;
      if (optionalStartCursorBuilder_ != null) {
        optionalStartCursorBuilder_.dispose();
        optionalStartCursorBuilder_ = null;
      }
      if (optionalRelationshipFiltersBuilder_ == null) {
        optionalRelationshipFilters_ = java.util.Collections.emptyList();
      } else {
        optionalRelationshipFilters_ = null;
        optionalRelationshipFiltersBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.authzed.api.v1.WatchServiceOuterClass.internal_static_authzed_api_v1_WatchRequest_descriptor;
    }

    @java.lang.Override
    public com.authzed.api.v1.WatchRequest getDefaultInstanceForType() {
      return com.authzed.api.v1.WatchRequest.getDefaultInstance();
    }

    @java.lang.Override
    public com.authzed.api.v1.WatchRequest build() {
      com.authzed.api.v1.WatchRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.authzed.api.v1.WatchRequest buildPartial() {
      com.authzed.api.v1.WatchRequest result = new com.authzed.api.v1.WatchRequest(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(com.authzed.api.v1.WatchRequest result) {
      if (((bitField0_ & 0x00000001) != 0)) {
        optionalObjectTypes_ = optionalObjectTypes_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.optionalObjectTypes_ = optionalObjectTypes_;
      if (optionalRelationshipFiltersBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          optionalRelationshipFilters_ = java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.optionalRelationshipFilters_ = optionalRelationshipFilters_;
      } else {
        result.optionalRelationshipFilters_ = optionalRelationshipFiltersBuilder_.build();
      }
    }

    private void buildPartial0(com.authzed.api.v1.WatchRequest result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.optionalStartCursor_ = optionalStartCursorBuilder_ == null
            ? optionalStartCursor_
            : optionalStartCursorBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.authzed.api.v1.WatchRequest) {
        return mergeFrom((com.authzed.api.v1.WatchRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.authzed.api.v1.WatchRequest other) {
      if (other == com.authzed.api.v1.WatchRequest.getDefaultInstance()) return this;
      if (!other.optionalObjectTypes_.isEmpty()) {
        if (optionalObjectTypes_.isEmpty()) {
          optionalObjectTypes_ = other.optionalObjectTypes_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureOptionalObjectTypesIsMutable();
          optionalObjectTypes_.addAll(other.optionalObjectTypes_);
        }
        onChanged();
      }
      if (other.hasOptionalStartCursor()) {
        mergeOptionalStartCursor(other.getOptionalStartCursor());
      }
      if (optionalRelationshipFiltersBuilder_ == null) {
        if (!other.optionalRelationshipFilters_.isEmpty()) {
          if (optionalRelationshipFilters_.isEmpty()) {
            optionalRelationshipFilters_ = other.optionalRelationshipFilters_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOptionalRelationshipFiltersIsMutable();
            optionalRelationshipFilters_.addAll(other.optionalRelationshipFilters_);
          }
          onChanged();
        }
      } else {
        if (!other.optionalRelationshipFilters_.isEmpty()) {
          if (optionalRelationshipFiltersBuilder_.isEmpty()) {
            optionalRelationshipFiltersBuilder_.dispose();
            optionalRelationshipFiltersBuilder_ = null;
            optionalRelationshipFilters_ = other.optionalRelationshipFilters_;
            bitField0_ = (bitField0_ & ~0x00000004);
            optionalRelationshipFiltersBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOptionalRelationshipFiltersFieldBuilder() : null;
          } else {
            optionalRelationshipFiltersBuilder_.addAllMessages(other.optionalRelationshipFilters_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              ensureOptionalObjectTypesIsMutable();
              optionalObjectTypes_.add(s);
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getOptionalStartCursorFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              com.authzed.api.v1.RelationshipFilter m =
                  input.readMessage(
                      com.authzed.api.v1.RelationshipFilter.parser(),
                      extensionRegistry);
              if (optionalRelationshipFiltersBuilder_ == null) {
                ensureOptionalRelationshipFiltersIsMutable();
                optionalRelationshipFilters_.add(m);
              } else {
                optionalRelationshipFiltersBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureOptionalObjectTypesIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        optionalObjectTypes_ = new com.google.protobuf.LazyStringArrayList(optionalObjectTypes_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @return A list containing the optionalObjectTypes.
     */
    public com.google.protobuf.ProtocolStringList
        getOptionalObjectTypesList() {
      return optionalObjectTypes_.getUnmodifiableView();
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @return The count of optionalObjectTypes.
     */
    public int getOptionalObjectTypesCount() {
      return optionalObjectTypes_.size();
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param index The index of the element to return.
     * @return The optionalObjectTypes at the given index.
     */
    public java.lang.String getOptionalObjectTypes(int index) {
      return optionalObjectTypes_.get(index);
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param index The index of the value to return.
     * @return The bytes of the optionalObjectTypes at the given index.
     */
    public com.google.protobuf.ByteString
        getOptionalObjectTypesBytes(int index) {
      return optionalObjectTypes_.getByteString(index);
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param index The index to set the value at.
     * @param value The optionalObjectTypes to set.
     * @return This builder for chaining.
     */
    public Builder setOptionalObjectTypes(
        int index, java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureOptionalObjectTypesIsMutable();
      optionalObjectTypes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param value The optionalObjectTypes to add.
     * @return This builder for chaining.
     */
    public Builder addOptionalObjectTypes(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      ensureOptionalObjectTypesIsMutable();
      optionalObjectTypes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param values The optionalObjectTypes to add.
     * @return This builder for chaining.
     */
    public Builder addAllOptionalObjectTypes(
        java.lang.Iterable<java.lang.String> values) {
      ensureOptionalObjectTypesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, optionalObjectTypes_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @return This builder for chaining.
     */
    public Builder clearOptionalObjectTypes() {
      optionalObjectTypes_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_object_types is a filter of resource object types to watch for changes.
     * If specified, only changes to the specified object types will be returned and
     * optional_relationship_filters cannot be used.
     * </pre>
     *
     * <code>repeated string optional_object_types = 1 [json_name = "optionalObjectTypes", (.validate.rules) = { ... }</code>
     * @param value The bytes of the optionalObjectTypes to add.
     * @return This builder for chaining.
     */
    public Builder addOptionalObjectTypesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      ensureOptionalObjectTypesIsMutable();
      optionalObjectTypes_.add(value);
      onChanged();
      return this;
    }

    private com.authzed.api.v1.ZedToken optionalStartCursor_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.authzed.api.v1.ZedToken, com.authzed.api.v1.ZedToken.Builder, com.authzed.api.v1.ZedTokenOrBuilder> optionalStartCursorBuilder_;
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     * @return Whether the optionalStartCursor field is set.
     */
    public boolean hasOptionalStartCursor() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     * @return The optionalStartCursor.
     */
    public com.authzed.api.v1.ZedToken getOptionalStartCursor() {
      if (optionalStartCursorBuilder_ == null) {
        return optionalStartCursor_ == null ? com.authzed.api.v1.ZedToken.getDefaultInstance() : optionalStartCursor_;
      } else {
        return optionalStartCursorBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public Builder setOptionalStartCursor(com.authzed.api.v1.ZedToken value) {
      if (optionalStartCursorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalStartCursor_ = value;
      } else {
        optionalStartCursorBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public Builder setOptionalStartCursor(
        com.authzed.api.v1.ZedToken.Builder builderForValue) {
      if (optionalStartCursorBuilder_ == null) {
        optionalStartCursor_ = builderForValue.build();
      } else {
        optionalStartCursorBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public Builder mergeOptionalStartCursor(com.authzed.api.v1.ZedToken value) {
      if (optionalStartCursorBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          optionalStartCursor_ != null &&
          optionalStartCursor_ != com.authzed.api.v1.ZedToken.getDefaultInstance()) {
          getOptionalStartCursorBuilder().mergeFrom(value);
        } else {
          optionalStartCursor_ = value;
        }
      } else {
        optionalStartCursorBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public Builder clearOptionalStartCursor() {
      bitField0_ = (bitField0_ & ~0x00000002);
      optionalStartCursor_ = null;
      if (optionalStartCursorBuilder_ != null) {
        optionalStartCursorBuilder_.dispose();
        optionalStartCursorBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public com.authzed.api.v1.ZedToken.Builder getOptionalStartCursorBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getOptionalStartCursorFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    public com.authzed.api.v1.ZedTokenOrBuilder getOptionalStartCursorOrBuilder() {
      if (optionalStartCursorBuilder_ != null) {
        return optionalStartCursorBuilder_.getMessageOrBuilder();
      } else {
        return optionalStartCursor_ == null ?
            com.authzed.api.v1.ZedToken.getDefaultInstance() : optionalStartCursor_;
      }
    }
    /**
     * <pre>
     * optional_start_cursor is the ZedToken holding the point-in-time at
     * which to start watching for changes.
     * If not specified, the watch will begin at the current head revision
     * of the datastore, returning any updates that occur after the caller
     * makes the request.
     * Note that if this cursor references a point-in-time containing data
     * that has been garbage collected, an error will be returned.
     * </pre>
     *
     * <code>.authzed.api.v1.ZedToken optional_start_cursor = 2 [json_name = "optionalStartCursor"];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.authzed.api.v1.ZedToken, com.authzed.api.v1.ZedToken.Builder, com.authzed.api.v1.ZedTokenOrBuilder> 
        getOptionalStartCursorFieldBuilder() {
      if (optionalStartCursorBuilder_ == null) {
        optionalStartCursorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.authzed.api.v1.ZedToken, com.authzed.api.v1.ZedToken.Builder, com.authzed.api.v1.ZedTokenOrBuilder>(
                getOptionalStartCursor(),
                getParentForChildren(),
                isClean());
        optionalStartCursor_ = null;
      }
      return optionalStartCursorBuilder_;
    }

    private java.util.List<com.authzed.api.v1.RelationshipFilter> optionalRelationshipFilters_ =
      java.util.Collections.emptyList();
    private void ensureOptionalRelationshipFiltersIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        optionalRelationshipFilters_ = new java.util.ArrayList<com.authzed.api.v1.RelationshipFilter>(optionalRelationshipFilters_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.authzed.api.v1.RelationshipFilter, com.authzed.api.v1.RelationshipFilter.Builder, com.authzed.api.v1.RelationshipFilterOrBuilder> optionalRelationshipFiltersBuilder_;

    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public java.util.List<com.authzed.api.v1.RelationshipFilter> getOptionalRelationshipFiltersList() {
      if (optionalRelationshipFiltersBuilder_ == null) {
        return java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
      } else {
        return optionalRelationshipFiltersBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public int getOptionalRelationshipFiltersCount() {
      if (optionalRelationshipFiltersBuilder_ == null) {
        return optionalRelationshipFilters_.size();
      } else {
        return optionalRelationshipFiltersBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public com.authzed.api.v1.RelationshipFilter getOptionalRelationshipFilters(int index) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        return optionalRelationshipFilters_.get(index);
      } else {
        return optionalRelationshipFiltersBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder setOptionalRelationshipFilters(
        int index, com.authzed.api.v1.RelationshipFilter value) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.set(index, value);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder setOptionalRelationshipFilters(
        int index, com.authzed.api.v1.RelationshipFilter.Builder builderForValue) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.set(index, builderForValue.build());
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder addOptionalRelationshipFilters(com.authzed.api.v1.RelationshipFilter value) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.add(value);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder addOptionalRelationshipFilters(
        int index, com.authzed.api.v1.RelationshipFilter value) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.add(index, value);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder addOptionalRelationshipFilters(
        com.authzed.api.v1.RelationshipFilter.Builder builderForValue) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.add(builderForValue.build());
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder addOptionalRelationshipFilters(
        int index, com.authzed.api.v1.RelationshipFilter.Builder builderForValue) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.add(index, builderForValue.build());
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder addAllOptionalRelationshipFilters(
        java.lang.Iterable<? extends com.authzed.api.v1.RelationshipFilter> values) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        ensureOptionalRelationshipFiltersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, optionalRelationshipFilters_);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder clearOptionalRelationshipFilters() {
      if (optionalRelationshipFiltersBuilder_ == null) {
        optionalRelationshipFilters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public Builder removeOptionalRelationshipFilters(int index) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        ensureOptionalRelationshipFiltersIsMutable();
        optionalRelationshipFilters_.remove(index);
        onChanged();
      } else {
        optionalRelationshipFiltersBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public com.authzed.api.v1.RelationshipFilter.Builder getOptionalRelationshipFiltersBuilder(
        int index) {
      return getOptionalRelationshipFiltersFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public com.authzed.api.v1.RelationshipFilterOrBuilder getOptionalRelationshipFiltersOrBuilder(
        int index) {
      if (optionalRelationshipFiltersBuilder_ == null) {
        return optionalRelationshipFilters_.get(index);  } else {
        return optionalRelationshipFiltersBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public java.util.List<? extends com.authzed.api.v1.RelationshipFilterOrBuilder> 
         getOptionalRelationshipFiltersOrBuilderList() {
      if (optionalRelationshipFiltersBuilder_ != null) {
        return optionalRelationshipFiltersBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(optionalRelationshipFilters_);
      }
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public com.authzed.api.v1.RelationshipFilter.Builder addOptionalRelationshipFiltersBuilder() {
      return getOptionalRelationshipFiltersFieldBuilder().addBuilder(
          com.authzed.api.v1.RelationshipFilter.getDefaultInstance());
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public com.authzed.api.v1.RelationshipFilter.Builder addOptionalRelationshipFiltersBuilder(
        int index) {
      return getOptionalRelationshipFiltersFieldBuilder().addBuilder(
          index, com.authzed.api.v1.RelationshipFilter.getDefaultInstance());
    }
    /**
     * <pre>
     * optional_relationship_filters, if specified, indicates the
     * filter(s) to apply to each relationship to be returned by watch.
     * The relationship will be returned as long as at least one filter matches,
     * this allows clients to match relationships on multiple filters on a single watch call.
     * If specified, optional_object_types cannot be used.
     * </pre>
     *
     * <code>repeated .authzed.api.v1.RelationshipFilter optional_relationship_filters = 3 [json_name = "optionalRelationshipFilters"];</code>
     */
    public java.util.List<com.authzed.api.v1.RelationshipFilter.Builder> 
         getOptionalRelationshipFiltersBuilderList() {
      return getOptionalRelationshipFiltersFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.authzed.api.v1.RelationshipFilter, com.authzed.api.v1.RelationshipFilter.Builder, com.authzed.api.v1.RelationshipFilterOrBuilder> 
        getOptionalRelationshipFiltersFieldBuilder() {
      if (optionalRelationshipFiltersBuilder_ == null) {
        optionalRelationshipFiltersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.authzed.api.v1.RelationshipFilter, com.authzed.api.v1.RelationshipFilter.Builder, com.authzed.api.v1.RelationshipFilterOrBuilder>(
                optionalRelationshipFilters_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        optionalRelationshipFilters_ = null;
      }
      return optionalRelationshipFiltersBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:authzed.api.v1.WatchRequest)
  }

  // @@protoc_insertion_point(class_scope:authzed.api.v1.WatchRequest)
  private static final com.authzed.api.v1.WatchRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.authzed.api.v1.WatchRequest();
  }

  public static com.authzed.api.v1.WatchRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<WatchRequest>
      PARSER = new com.google.protobuf.AbstractParser<WatchRequest>() {
    @java.lang.Override
    public WatchRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<WatchRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<WatchRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.authzed.api.v1.WatchRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

