// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/experimental_service.proto

package com.authzed.api.v1;

public interface ExpTypeReferenceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.v1.ExpTypeReference)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * subject_definition_name is the name of the subject's definition.
   * </pre>
   *
   * <code>string subject_definition_name = 1 [json_name = "subjectDefinitionName"];</code>
   * @return The subjectDefinitionName.
   */
  java.lang.String getSubjectDefinitionName();
  /**
   * <pre>
   * subject_definition_name is the name of the subject's definition.
   * </pre>
   *
   * <code>string subject_definition_name = 1 [json_name = "subjectDefinitionName"];</code>
   * @return The bytes for subjectDefinitionName.
   */
  com.google.protobuf.ByteString
      getSubjectDefinitionNameBytes();

  /**
   * <pre>
   * optional_caveat_name is the name of the caveat that is applied to the subject, if any.
   * </pre>
   *
   * <code>string optional_caveat_name = 2 [json_name = "optionalCaveatName"];</code>
   * @return The optionalCaveatName.
   */
  java.lang.String getOptionalCaveatName();
  /**
   * <pre>
   * optional_caveat_name is the name of the caveat that is applied to the subject, if any.
   * </pre>
   *
   * <code>string optional_caveat_name = 2 [json_name = "optionalCaveatName"];</code>
   * @return The bytes for optionalCaveatName.
   */
  com.google.protobuf.ByteString
      getOptionalCaveatNameBytes();

  /**
   * <pre>
   * is_terminal_subject is true if the subject is terminal, meaning it is referenced directly vs a sub-relation.
   * </pre>
   *
   * <code>bool is_terminal_subject = 3 [json_name = "isTerminalSubject"];</code>
   * @return Whether the isTerminalSubject field is set.
   */
  boolean hasIsTerminalSubject();
  /**
   * <pre>
   * is_terminal_subject is true if the subject is terminal, meaning it is referenced directly vs a sub-relation.
   * </pre>
   *
   * <code>bool is_terminal_subject = 3 [json_name = "isTerminalSubject"];</code>
   * @return The isTerminalSubject.
   */
  boolean getIsTerminalSubject();

  /**
   * <pre>
   * optional_relation_name is the name of the relation that is applied to the subject, if any.
   * </pre>
   *
   * <code>string optional_relation_name = 4 [json_name = "optionalRelationName"];</code>
   * @return Whether the optionalRelationName field is set.
   */
  boolean hasOptionalRelationName();
  /**
   * <pre>
   * optional_relation_name is the name of the relation that is applied to the subject, if any.
   * </pre>
   *
   * <code>string optional_relation_name = 4 [json_name = "optionalRelationName"];</code>
   * @return The optionalRelationName.
   */
  java.lang.String getOptionalRelationName();
  /**
   * <pre>
   * optional_relation_name is the name of the relation that is applied to the subject, if any.
   * </pre>
   *
   * <code>string optional_relation_name = 4 [json_name = "optionalRelationName"];</code>
   * @return The bytes for optionalRelationName.
   */
  com.google.protobuf.ByteString
      getOptionalRelationNameBytes();

  /**
   * <pre>
   * is_public_wildcard is true if the subject is a public wildcard.
   * </pre>
   *
   * <code>bool is_public_wildcard = 5 [json_name = "isPublicWildcard"];</code>
   * @return Whether the isPublicWildcard field is set.
   */
  boolean hasIsPublicWildcard();
  /**
   * <pre>
   * is_public_wildcard is true if the subject is a public wildcard.
   * </pre>
   *
   * <code>bool is_public_wildcard = 5 [json_name = "isPublicWildcard"];</code>
   * @return The isPublicWildcard.
   */
  boolean getIsPublicWildcard();

  public com.authzed.api.v1.ExpTypeReference.TyperefCase getTyperefCase();
}
