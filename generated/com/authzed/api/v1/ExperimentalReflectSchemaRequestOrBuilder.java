// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/experimental_service.proto

package com.authzed.api.v1;

public interface ExperimentalReflectSchemaRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.v1.ExperimentalReflectSchemaRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   * @return Whether the consistency field is set.
   */
  boolean hasConsistency();
  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   * @return The consistency.
   */
  com.authzed.api.v1.Consistency getConsistency();
  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   */
  com.authzed.api.v1.ConsistencyOrBuilder getConsistencyOrBuilder();

  /**
   * <pre>
   * optional_filters defines optional filters that are applied in
   * an OR fashion to the schema, before being returned
   * </pre>
   *
   * <code>repeated .authzed.api.v1.ExpSchemaFilter optional_filters = 2 [json_name = "optionalFilters"];</code>
   */
  java.util.List<com.authzed.api.v1.ExpSchemaFilter> 
      getOptionalFiltersList();
  /**
   * <pre>
   * optional_filters defines optional filters that are applied in
   * an OR fashion to the schema, before being returned
   * </pre>
   *
   * <code>repeated .authzed.api.v1.ExpSchemaFilter optional_filters = 2 [json_name = "optionalFilters"];</code>
   */
  com.authzed.api.v1.ExpSchemaFilter getOptionalFilters(int index);
  /**
   * <pre>
   * optional_filters defines optional filters that are applied in
   * an OR fashion to the schema, before being returned
   * </pre>
   *
   * <code>repeated .authzed.api.v1.ExpSchemaFilter optional_filters = 2 [json_name = "optionalFilters"];</code>
   */
  int getOptionalFiltersCount();
  /**
   * <pre>
   * optional_filters defines optional filters that are applied in
   * an OR fashion to the schema, before being returned
   * </pre>
   *
   * <code>repeated .authzed.api.v1.ExpSchemaFilter optional_filters = 2 [json_name = "optionalFilters"];</code>
   */
  java.util.List<? extends com.authzed.api.v1.ExpSchemaFilterOrBuilder> 
      getOptionalFiltersOrBuilderList();
  /**
   * <pre>
   * optional_filters defines optional filters that are applied in
   * an OR fashion to the schema, before being returned
   * </pre>
   *
   * <code>repeated .authzed.api.v1.ExpSchemaFilter optional_filters = 2 [json_name = "optionalFilters"];</code>
   */
  com.authzed.api.v1.ExpSchemaFilterOrBuilder getOptionalFiltersOrBuilder(
      int index);
}
