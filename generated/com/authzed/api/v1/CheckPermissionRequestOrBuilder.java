// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/v1/permission_service.proto

package com.authzed.api.v1;

public interface CheckPermissionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.v1.CheckPermissionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   * @return Whether the consistency field is set.
   */
  boolean hasConsistency();
  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   * @return The consistency.
   */
  com.authzed.api.v1.Consistency getConsistency();
  /**
   * <code>.authzed.api.v1.Consistency consistency = 1 [json_name = "consistency"];</code>
   */
  com.authzed.api.v1.ConsistencyOrBuilder getConsistencyOrBuilder();

  /**
   * <pre>
   * resource is the resource on which to check the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 2 [json_name = "resource", (.validate.rules) = { ... }</code>
   * @return Whether the resource field is set.
   */
  boolean hasResource();
  /**
   * <pre>
   * resource is the resource on which to check the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 2 [json_name = "resource", (.validate.rules) = { ... }</code>
   * @return The resource.
   */
  com.authzed.api.v1.ObjectReference getResource();
  /**
   * <pre>
   * resource is the resource on which to check the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.ObjectReference resource = 2 [json_name = "resource", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.ObjectReferenceOrBuilder getResourceOrBuilder();

  /**
   * <pre>
   * permission is the name of the permission (or relation) on which to execute
   * the check.
   * </pre>
   *
   * <code>string permission = 3 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The permission.
   */
  java.lang.String getPermission();
  /**
   * <pre>
   * permission is the name of the permission (or relation) on which to execute
   * the check.
   * </pre>
   *
   * <code>string permission = 3 [json_name = "permission", (.validate.rules) = { ... }</code>
   * @return The bytes for permission.
   */
  com.google.protobuf.ByteString
      getPermissionBytes();

  /**
   * <pre>
   * subject is the subject that will be checked for the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   * @return Whether the subject field is set.
   */
  boolean hasSubject();
  /**
   * <pre>
   * subject is the subject that will be checked for the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   * @return The subject.
   */
  com.authzed.api.v1.SubjectReference getSubject();
  /**
   * <pre>
   * subject is the subject that will be checked for the permission or relation.
   * </pre>
   *
   * <code>.authzed.api.v1.SubjectReference subject = 4 [json_name = "subject", (.validate.rules) = { ... }</code>
   */
  com.authzed.api.v1.SubjectReferenceOrBuilder getSubjectOrBuilder();

  /**
   * <pre>
   * context consists of named values that are injected into the caveat evaluation context
   * </pre>
   *
   * <code>.google.protobuf.Struct context = 5 [json_name = "context", (.validate.rules) = { ... }</code>
   * @return Whether the context field is set.
   */
  boolean hasContext();
  /**
   * <pre>
   * context consists of named values that are injected into the caveat evaluation context
   * </pre>
   *
   * <code>.google.protobuf.Struct context = 5 [json_name = "context", (.validate.rules) = { ... }</code>
   * @return The context.
   */
  com.google.protobuf.Struct getContext();
  /**
   * <pre>
   * context consists of named values that are injected into the caveat evaluation context
   * </pre>
   *
   * <code>.google.protobuf.Struct context = 5 [json_name = "context", (.validate.rules) = { ... }</code>
   */
  com.google.protobuf.StructOrBuilder getContextOrBuilder();

  /**
   * <pre>
   * with_tracing, if true, indicates that the response should include a debug trace.
   * This can be useful for debugging and performance analysis, but adds a small amount
   * of compute overhead to the request.
   * </pre>
   *
   * <code>bool with_tracing = 6 [json_name = "withTracing"];</code>
   * @return The withTracing.
   */
  boolean getWithTracing();
}
