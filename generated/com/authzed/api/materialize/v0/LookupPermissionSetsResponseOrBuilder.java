// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/materialize/v0/watchpermissionsets.proto

package com.authzed.api.materialize.v0;

public interface LookupPermissionSetsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.materialize.v0.LookupPermissionSetsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * change represents the permission set delta necessary to transition an uninitialized target system to
   * a specific snapshot revision. In practice it's not different from the WatchPermissionSetsResponse.change, except
   * all changes will be of time SET_OPERATION_ADDED because it's assumed there is no known previous state.
   * Applying the deltas to a previously initialized target system would yield incorrect results.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.PermissionSetChange change = 1 [json_name = "change"];</code>
   * @return Whether the change field is set.
   */
  boolean hasChange();
  /**
   * <pre>
   * change represents the permission set delta necessary to transition an uninitialized target system to
   * a specific snapshot revision. In practice it's not different from the WatchPermissionSetsResponse.change, except
   * all changes will be of time SET_OPERATION_ADDED because it's assumed there is no known previous state.
   * Applying the deltas to a previously initialized target system would yield incorrect results.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.PermissionSetChange change = 1 [json_name = "change"];</code>
   * @return The change.
   */
  com.authzed.api.materialize.v0.PermissionSetChange getChange();
  /**
   * <pre>
   * change represents the permission set delta necessary to transition an uninitialized target system to
   * a specific snapshot revision. In practice it's not different from the WatchPermissionSetsResponse.change, except
   * all changes will be of time SET_OPERATION_ADDED because it's assumed there is no known previous state.
   * Applying the deltas to a previously initialized target system would yield incorrect results.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.PermissionSetChange change = 1 [json_name = "change"];</code>
   */
  com.authzed.api.materialize.v0.PermissionSetChangeOrBuilder getChangeOrBuilder();

  /**
   * <pre>
   * cursor points to a specific permission set in a revision.
   * The consumer should keep track of the cursor in order to resume streaming in the event of consumer restarts. This
   * is particularly important in backfill scenarios that may take hours or event days to complete.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor cursor = 2 [json_name = "cursor"];</code>
   * @return Whether the cursor field is set.
   */
  boolean hasCursor();
  /**
   * <pre>
   * cursor points to a specific permission set in a revision.
   * The consumer should keep track of the cursor in order to resume streaming in the event of consumer restarts. This
   * is particularly important in backfill scenarios that may take hours or event days to complete.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor cursor = 2 [json_name = "cursor"];</code>
   * @return The cursor.
   */
  com.authzed.api.materialize.v0.Cursor getCursor();
  /**
   * <pre>
   * cursor points to a specific permission set in a revision.
   * The consumer should keep track of the cursor in order to resume streaming in the event of consumer restarts. This
   * is particularly important in backfill scenarios that may take hours or event days to complete.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor cursor = 2 [json_name = "cursor"];</code>
   */
  com.authzed.api.materialize.v0.CursorOrBuilder getCursorOrBuilder();
}
