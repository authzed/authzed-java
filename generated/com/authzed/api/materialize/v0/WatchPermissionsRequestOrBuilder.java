// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/materialize/v0/watchpermissions.proto

package com.authzed.api.materialize.v0;

public interface WatchPermissionsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.materialize.v0.WatchPermissionsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * permissions is a list of permissions to watch for changes. At least one permission must be specified, and it must
   * be a subset or equal to the permissions that were enabled for the service.
   * </pre>
   *
   * <code>repeated .authzed.api.materialize.v0.WatchedPermission permissions = 1 [json_name = "permissions"];</code>
   */
  java.util.List<com.authzed.api.materialize.v0.WatchedPermission> 
      getPermissionsList();
  /**
   * <pre>
   * permissions is a list of permissions to watch for changes. At least one permission must be specified, and it must
   * be a subset or equal to the permissions that were enabled for the service.
   * </pre>
   *
   * <code>repeated .authzed.api.materialize.v0.WatchedPermission permissions = 1 [json_name = "permissions"];</code>
   */
  com.authzed.api.materialize.v0.WatchedPermission getPermissions(int index);
  /**
   * <pre>
   * permissions is a list of permissions to watch for changes. At least one permission must be specified, and it must
   * be a subset or equal to the permissions that were enabled for the service.
   * </pre>
   *
   * <code>repeated .authzed.api.materialize.v0.WatchedPermission permissions = 1 [json_name = "permissions"];</code>
   */
  int getPermissionsCount();
  /**
   * <pre>
   * permissions is a list of permissions to watch for changes. At least one permission must be specified, and it must
   * be a subset or equal to the permissions that were enabled for the service.
   * </pre>
   *
   * <code>repeated .authzed.api.materialize.v0.WatchedPermission permissions = 1 [json_name = "permissions"];</code>
   */
  java.util.List<? extends com.authzed.api.materialize.v0.WatchedPermissionOrBuilder> 
      getPermissionsOrBuilderList();
  /**
   * <pre>
   * permissions is a list of permissions to watch for changes. At least one permission must be specified, and it must
   * be a subset or equal to the permissions that were enabled for the service.
   * </pre>
   *
   * <code>repeated .authzed.api.materialize.v0.WatchedPermission permissions = 1 [json_name = "permissions"];</code>
   */
  com.authzed.api.materialize.v0.WatchedPermissionOrBuilder getPermissionsOrBuilder(
      int index);

  /**
   * <pre>
   * optional_starting_after is the revision token to start watching from. If not provided, the stream
   * will start from the current revision at the moment of the request.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_starting_after = 2 [json_name = "optionalStartingAfter"];</code>
   * @return Whether the optionalStartingAfter field is set.
   */
  boolean hasOptionalStartingAfter();
  /**
   * <pre>
   * optional_starting_after is the revision token to start watching from. If not provided, the stream
   * will start from the current revision at the moment of the request.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_starting_after = 2 [json_name = "optionalStartingAfter"];</code>
   * @return The optionalStartingAfter.
   */
  com.authzed.api.v1.ZedToken getOptionalStartingAfter();
  /**
   * <pre>
   * optional_starting_after is the revision token to start watching from. If not provided, the stream
   * will start from the current revision at the moment of the request.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_starting_after = 2 [json_name = "optionalStartingAfter"];</code>
   */
  com.authzed.api.v1.ZedTokenOrBuilder getOptionalStartingAfterOrBuilder();
}
