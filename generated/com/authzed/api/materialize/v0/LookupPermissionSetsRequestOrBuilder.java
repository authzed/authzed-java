// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authzed/api/materialize/v0/watchpermissionsets.proto

package com.authzed.api.materialize.v0;

public interface LookupPermissionSetsRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:authzed.api.materialize.v0.LookupPermissionSetsRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * limit is the number of permission sets to stream over a single LookupPermissionSets. Once the limit is reached,
   * the server will close the stream. If more permission sets are available, the consume should open a new stream
   * providing optional_starting_after_cursor, using the cursor from the last response.
   * </pre>
   *
   * <code>uint32 limit = 1 [json_name = "limit"];</code>
   * @return The limit.
   */
  int getLimit();

  /**
   * <pre>
   * optional_at_revision specifies the client is requesting to lookup PermissionSets at a specific revision. It's
   * optional, and if not provided, PermissionSets will be looked up at the current revision. The cursor always
   * takes precedence in defining the revision when present.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_at_revision = 2 [json_name = "optionalAtRevision"];</code>
   * @return Whether the optionalAtRevision field is set.
   */
  boolean hasOptionalAtRevision();
  /**
   * <pre>
   * optional_at_revision specifies the client is requesting to lookup PermissionSets at a specific revision. It's
   * optional, and if not provided, PermissionSets will be looked up at the current revision. The cursor always
   * takes precedence in defining the revision when present.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_at_revision = 2 [json_name = "optionalAtRevision"];</code>
   * @return The optionalAtRevision.
   */
  com.authzed.api.v1.ZedToken getOptionalAtRevision();
  /**
   * <pre>
   * optional_at_revision specifies the client is requesting to lookup PermissionSets at a specific revision. It's
   * optional, and if not provided, PermissionSets will be looked up at the current revision. The cursor always
   * takes precedence in defining the revision when present.
   * </pre>
   *
   * <code>.authzed.api.v1.ZedToken optional_at_revision = 2 [json_name = "optionalAtRevision"];</code>
   */
  com.authzed.api.v1.ZedTokenOrBuilder getOptionalAtRevisionOrBuilder();

  /**
   * <pre>
   * optional_starting_after_cursor is used to specify the offset to start streaming permission sets from.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor optional_starting_after_cursor = 4 [json_name = "optionalStartingAfterCursor"];</code>
   * @return Whether the optionalStartingAfterCursor field is set.
   */
  boolean hasOptionalStartingAfterCursor();
  /**
   * <pre>
   * optional_starting_after_cursor is used to specify the offset to start streaming permission sets from.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor optional_starting_after_cursor = 4 [json_name = "optionalStartingAfterCursor"];</code>
   * @return The optionalStartingAfterCursor.
   */
  com.authzed.api.materialize.v0.Cursor getOptionalStartingAfterCursor();
  /**
   * <pre>
   * optional_starting_after_cursor is used to specify the offset to start streaming permission sets from.
   * </pre>
   *
   * <code>.authzed.api.materialize.v0.Cursor optional_starting_after_cursor = 4 [json_name = "optionalStartingAfterCursor"];</code>
   */
  com.authzed.api.materialize.v0.CursorOrBuilder getOptionalStartingAfterCursorOrBuilder();
}
